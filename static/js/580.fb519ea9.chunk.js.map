{"version":3,"file":"static/js/580.fb519ea9.chunk.js","mappings":"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","sources":["webpack://reactlearning/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://reactlearning/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://reactlearning/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__bD3aL\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__iDhYM\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"------------\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport React from \"react\";\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      <div>\n        {/*<img\n               className={s.image}\n               src='https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300'\n               alt=''\n            />*/}\n      </div>\n      <div className={s.descriptionBlock}>\n        <img src={props.profile.photos.large} alt=\"\" />\n        <ProfileStatusWithHooks\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n        <p>{props.profile.fullName}</p>\n        <p>{props.profile.aboutMe}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__t0JQK\"};","import s from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://surl.li/qxzyg\"\r\n\t\t\t\talt=\"\"\r\n\t\t\t/>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>Like</span> {props.likeCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+I5kY\",\"title\":\"MyPosts_title__TUvSG\",\"posts\":\"MyPosts_posts__bIusa\",\"textarea\":\"MyPosts_textarea__tsgpv\",\"btn\":\"MyPosts_btn__i6ksF\"};","import Post from \"./Post/Post\";\nimport s from \"./MyPosts.module.css\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validatirs\";\nimport { Textarea } from \"../../common/FormsControll/FormsControll\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          className={s.textarea}\n          name={\"newPostText\"}\n          validate={[required, maxLength10]}\n          placeholder={\"Post message\"}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nAddNewPostForm = reduxForm({ form: \"ProfileForm\" })(AddNewPostForm);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((post) => (\n    <Post\n      key={post.id}\n      id={post.id}\n      message={post.message}\n      likeCount={post.likeCount}\n    />\n  ));\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3 className={s.title}>My posts</h3>\n      <AddNewPostForm onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import {addPost} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = state => {\r\n   return {\r\n      posts: state.profilePage.posts\r\n   };\r\n};\r\n\r\n/*let mapDispatchToProps = dispatch => {\r\n   return {\r\n      updateNewPostText: newPostText => {\r\n         dispatch(updateNewPostTextActionCreator(newPostText));\r\n      },\r\n      addPost: () => {\r\n         dispatch(addPostActionCreator());\r\n      }\r\n   };\r\n};*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst Profile = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getStatus, setUserProfile, updateStatus} from './../../redux/profileReducer';\nimport {useParams} from 'react-router-dom';\nimport {compose} from 'redux';\nimport {WithAuthRedirect} from '../../hoc/withAuthRedirect';\n\nconst withRouter = WrappedComponent => props => {\n   const params = useParams();\n\n   return <WrappedComponent {...props} params={params} />;\n};\n\nclass ProfileContainer extends React.Component {\n   componentDidMount() {\n      let userId = this.props.params.userId;\n      if (!userId) {\n         userId = this.props.authorizedUserId;\n      }\n      this.props.setUserProfile(userId);\n      this.props.getStatus(userId);\n   }\n\n   render() {\n      return (\n         <Profile\n            {...this.props}\n            profile={this.props.profile}\n            status={this.props.status}\n            updateStatus={this.props.updateStatus}\n         />\n      );\n   }\n}\n\nlet mapStateToProps = state => ({\n   profile: state.profilePage.profile,\n   status: state.profilePage.status,\n   authorizedUserId: state.auth.id,\n   isAuth: state.auth.isAuth\n});\n\nexport default compose(\n   connect(mapStateToProps, {setUserProfile, getStatus, updateStatus}),\n   withRouter,\n   WithAuthRedirect\n)(ProfileContainer);\n","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = state => ({\r\n   isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = Component => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Navigate to='/login/' />;\r\n         return <Component {...this.props} />;\r\n      }\r\n   }\r\n\r\n   let connectAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n   return connectAuthRedirectComponent;\r\n};\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","autoFocus","profile","className","s","src","photos","large","alt","ProfileStatusWithHooks","fullName","aboutMe","Preloader","message","likeCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","reduxForm","form","React","postsElements","posts","map","post","Post","id","values","addPost","newPostText","connect","state","profilePage","MyPosts","_ref","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","params","authorizedUserId","setUserProfile","getStatus","render","Profile","compose","auth","isAuth","WrappedComponent","useParams","WithAuthRedirect","mapStateToPropsRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}