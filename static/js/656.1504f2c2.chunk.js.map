{"version":3,"file":"static/js/656.1504f2c2.chunk.js","mappings":"2IACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA0I,wBAA1I,EAA+K,4BAA/K,EAAsN,0BAAtN,EAA0P,yB,8BCI1P,MAWA,EAXoBA,IAClB,MAAMC,EAAO,YAAcD,EAAME,GACjC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAcG,IAAI,uBAAuBC,IAAI,iBAC/DF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAIV,EAAKK,SAAEN,EAAMY,SACtB,ECJV,EAJiBZ,IACNO,EAAAA,EAAAA,KAAA,OAAKL,GAAIF,EAAME,GAAIE,UAAWC,EAAUC,SAAEN,EAAMa,U,4CCA3D,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAoBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAhC,EAlBuBjB,IAEjBO,EAAAA,EAAAA,KAAA,OAAAD,UACGH,EAAAA,EAAAA,MAAA,QAAMe,SAAUlB,EAAMmB,aAAab,SAAA,EAChCC,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CACHC,UAAWC,EAAAA,GACXV,KAAK,iBACLW,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUX,MAExBP,EAAAA,EAAAA,KAAA,OAAAD,UACGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBCWvB,EAvBgBN,IACb,IAAI0B,EAAkB1B,EAAM2B,QAAQC,KAAIC,IACrCtB,EAAAA,EAAAA,KAACuB,EAAU,CAAiBlB,KAAMiB,EAAOjB,KAAMV,GAAI2B,EAAO3B,IAAzC2B,EAAO3B,MAEvB6B,EAAmB/B,EAAMgC,SAASJ,KAAIf,IACvCN,EAAAA,EAAAA,KAAC0B,EAAO,CAAkBpB,QAASA,EAAQA,QAASX,GAAIW,EAAQX,IAAlDW,EAAQX,MAOzB,OACGC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAAEoB,KACjCvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAAD,SAAMyB,KACNxB,EAAAA,EAAAA,KAAC2B,EAAc,CAAChB,SATLiB,IACjBnC,EAAMoC,YAAYD,EAAOE,eAAe,SAUlC,E,iCCXZ,SAAeC,E,QAAAA,KACZC,EAAAA,EAAAA,KARmBC,IACZ,CACJb,QAASa,EAAMC,YAAYd,QAC3BK,SAAUQ,EAAMC,YAAYT,YAKN,CACtBI,YACH,MACAM,EAAAA,EAJH,CAKEC,E,6ECdF,IAAIC,EAA0BJ,IAAK,CAChCK,OAAQL,EAAMM,KAAKD,SAGf,MAAMH,EAAmBK,IAC7B,MAAMC,UAA0BC,EAAAA,UAC7BC,MAAAA,GACG,OAAKC,KAAKnD,MAAM6C,QACTtC,EAAAA,EAAAA,KAACwC,EAAS,IAAKI,KAAKnD,SADIO,EAAAA,EAAAA,KAAC6C,EAAAA,GAAQ,CAACzC,GAAG,WAE/C,EAKH,OAFmC4B,EAAAA,EAAAA,IAAQK,EAARL,CAAiCS,EAEjC,C","sources":["webpack://reactlearning/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DIalogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__pHlvN\",\"dialogsItems\":\"Dialogs_dialogsItems__fNNhd\",\"active\":\"Dialogs_active__emzun\",\"dialog\":\"Dialogs_dialog__-AwY5\",\"profileImg\":\"Dialogs_profileImg__8Acdq\",\"messages\":\"Dialogs_messages__Q9iqk\",\"message\":\"Dialogs_message__Gu8MU\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n        <img className={s.profileImg} src=\"http://surl.li/qxzyg\" alt=\"Jackie Chan\"/>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return <div id={props.id} className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControll/FormsControll';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validatirs';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = props => {\r\n   return (\r\n      <div>\r\n         <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n               component={Textarea}\r\n               name='newMessageText'\r\n               placeholder='Enter your message'\r\n               validate={[required, maxLength50]}\r\n            />\r\n            <div>\r\n               <button>Send</button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm);\r\n","import s from './Dialogs.module.css';\r\nimport DialogItem from './DIalogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = props => {\r\n   let dialogsElements = props.dialogs.map(dialog => (\r\n      <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />\r\n   ));\r\n   let messagesElements = props.messages.map(message => (\r\n      <Message key={message.id} message={message.message} id={message.id} />\r\n   ));\r\n\r\n   let addNewMessage = values => {\r\n      props.sendMessage(values.newMessageText);\r\n   };\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>{dialogsElements}</div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from './Dialogs';\r\nimport {sendMessage} from '../../redux/dialogsReducer';\r\nimport {connect} from 'react-redux';\r\nimport {WithAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = state => {\r\n   return {\r\n      dialogs: state.dialogsPage.dialogs,\r\n      messages: state.dialogsPage.messages\r\n   };\r\n};\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      sendMessage\r\n   }),\r\n   WithAuthRedirect\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = state => ({\r\n   isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = Component => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Navigate to='/login/' />;\r\n         return <Component {...this.props} />;\r\n      }\r\n   }\r\n\r\n   let connectAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n   return connectAuthRedirectComponent;\r\n};\r\n"],"names":["props","path","id","_jsxs","className","s","children","_jsx","src","alt","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogs","map","dialog","DialogItem","messagesElements","messages","Message","AddMessageForm","values","sendMessage","newMessageText","compose","connect","state","dialogsPage","WithAuthRedirect","Dialogs","mapStateToPropsRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate"],"sourceRoot":""}